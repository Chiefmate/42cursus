;; ************************************************************************** ;;
;;                                                                            ;;
;;                                                        :::      ::::::::   ;;
;;   pseudocode                                         :+:      :+:    :+:   ;;
;;                                                    +:+ +:+         +:+     ;;
;;   By: hyunhole <hyunhole@student.42seoul.kr>     +#+  +:+       +#+        ;;
;;                                                +#+#+#+#+#+   +#+           ;;
;;   Created: 2022/02/12 15:19:12 by hyunhole          #+#    #+#             ;;
;;   Updated: 2022/02/12 15:19:12 by hyunhole         ###   ########.fr       ;;
;;                                                                            ;;
;; ************************************************************************** ;;
ft_printf 수도코드

헤더
플래그를 저장할 enum e_flag를 typedef t_flag로 선언한다.
	enum value에는 F_SHARP, F_SPACE, F_PLUS, F_MINUS, F_ZERO, F_MAX가 있다.
플래그, 폭, 정밀도를 저장할 구조체 s_info를 typedef t_info로 선언한다.
	char	flag[F_MAX];
	int		width;
	int		precision;
	char	fspec;

코드
int ft_printf(const char *f, ...) 포맷문자열과 다른 인자들을 입력받는다.

int ft_fprintf(int fd, const char *f, ...)에 대입한다.

지금까지 출력한 글자수를 저장할 변수 cnt를 선언한다.
플래그, 폭, 정밀도를 저장할 구조체 t_info info를 선언한다.
포맷문자열의 하나의 글자에 대해서
	if 그 글자가 '%' 라면
		t_info 변수를 만들고 초기화한다.
		"포맷 지정자"가 나올때까지
			"플래그" 인지 확인한다.
				'#'
				' '
				'+'
				'-'
				'0'
			"폭" 인지 확인한다.
				'0이 아닌 숫자'
			"정밀도" 인지 확인한다.
				if '.'
		"포맷 지정자" 인지 확인한다.
			'c'
				글자수 1을 리턴하는 ft_putchar에서 해당 문자를 출력한다.
				출력한 글자수 1을 cnt에 더한다.
			's'
				글자수를 리턴하는 ft_putstr()에서 해당 문자를 출력한다.
				출력한 글자수를 cnt에 더한다.
			'p'
				0x를 출력한다.
				글자수를 리턴하는 ft_puthex()에서 해당 포인터를 출력한다.
				(2 + 글자수)를 cnt에 더한다.
			'd' or 'i'
				글자수를 리턴하는 ft_putnbr()에서 해당 수를 출력한다.
					'+'플래그와 ' '플래그가 같이 있는 경우 '+' 플래그가 우선한다.
				글자수를 cnt에 더한다.
			'u'
				글자수를 리턴하는 ft_putnbr()에서 해당 수를 출력한다.
				글자수를 cnt에 더한다.
			'x'
				글자수를 리턴하는 ft_puthex(info)에서 해당 포인터를 출력한다.
					'#'플래그가 있는 경우
						앞에 0x를 먼저 출력한다.
						ret에 2를 더한다.
					hex값을 출력한다.
					출력한 글자수 ret을 리턴한다.
				글자수를 cnt에 더한다.
			'X'
				글자수를 리턴하는 ft_puthex(info)에서 해당 포인터를 출력한다.
					'#'플래그가 있는 경우
						앞에 0x를 먼저 출력한다.
						ret에 2를 더한다.
					hex값을 출력한다.
					출력한 글자수 ret를 리턴한다.
				글자수를 cnt에 더한다.
			'%'
				'%'를 출력한다.
				글자수 1을 cnt에 더한다.
		출력한 글자수를 offset에 더한다.
	else 다른 문자라면
		그대로 그 문자 1개를 출력한다.
		출력한 글자수(1)를 cnt에 더한다.
		출력한 글자수(1)를 offset에 더한다.
	지금까지 처리한 포맷문자 중 마지막 문자의 다음 문자(offset)를 확인한다. (continue)

출력한 글자의 개수 cnt를 반환하며 종료.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


int ft_printf(const char *fmt, ...)
{
	int		ret;
	va_list	ap;

	va_start(ap, fmt);
	ret = ft_vdprintf(1, fmt, ap);
	va_end(ap);
	return (ret);
}

int ft_vdprintf(int fd, const char *fmt, va_list ap)
{

}